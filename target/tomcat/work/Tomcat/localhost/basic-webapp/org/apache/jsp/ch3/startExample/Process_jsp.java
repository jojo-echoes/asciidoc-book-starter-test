/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2024-12-02 10:18:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch3.startExample;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import java.util.Enumeration;
import ch3.startExample.UserDataBean;
import javax.servlet.http.Cookie;

public final class Process_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    Logger logger = LoggerFactory.getLogger("ProcessJSP");
    logger.info("Rendering Process.jsp");

    // Log cookies
    Cookie[] cookies = request.getCookies();
    if (cookies != null) {
        for (Cookie cookie : cookies) {
            logger.info("Cookie - Name: {}, Value: {}", cookie.getName(), cookie.getValue());
        }
    } else {
        logger.info("No cookies found");
    }

    // Retrieve the session object
    // HttpSession session = request.getSession();
    // Retrieve the session object (implicitly available)        
    logger.info("Session ID: {}", session.getId());
    logger.info("Creation Time: {}", session.getCreationTime());
    logger.info("Last Accessed Time: {}", session.getLastAccessedTime());
    logger.info("Max Inactive Interval: {}", session.getMaxInactiveInterval());

    Enumeration<String> attributeNames = session.getAttributeNames();
    while (attributeNames.hasMoreElements()) {
        String attributeName = attributeNames.nextElement();
        Object attributeValue = session.getAttribute(attributeName);
        logger.info("Session Attribute - Name: {}, Value: {}", attributeName, attributeValue);
    }

    // Retrieve the userData attribute from the session
    UserDataBean userData = (UserDataBean) session.getAttribute("userData");
    String hobby = "";
    String aversion = "";

    if (userData != null) {
        hobby = userData.getHobby();
        aversion = userData.getAversion();
        logger.info("UserData: {}", userData);
        logger.info("Hobby: {}", hobby);
        logger.info("Aversion: {}", aversion);
    } else {
        logger.warn("UserData attribute is null");
    }

      out.write("\n");
      out.write("<!DOCTYPE HTML>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <title>Process Page</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <h2>Processed Data</h2>\n");
      out.write("    <p>Thank you for your information. Your hobby of <strong>\"");
      out.print( hobby );
      out.write("\"</strong> and aversion of <strong>\"");
      out.print( aversion );
      out.write("\"</strong> will be added to our records, eventually.</p>\n");
      out.write("    <form action=\"Controller\" method=\"get\">\n");
      out.write("        <input type=\"hidden\" name=\"hobby\" value=\"");
      out.print( hobby );
      out.write("\">\n");
      out.write("        <input type=\"hidden\" name=\"aversion\" value=\"");
      out.print( aversion );
      out.write("\">\n");
      out.write("        <p><input type=\"submit\" name=\"editButton\" value=\"Edit\"></p>\n");
      out.write("    </form>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
